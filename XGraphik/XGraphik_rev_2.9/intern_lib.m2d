#ifmocka

FOREIGN MODULE intern_lib;

#endmocka

#ifgpm

INTERFACE DEFINITION MODULE intern_lib;

IMPORT IMPLEMENTATION FROM "-L/usr/openwin/lib & -lxview & -lolgx & -lX11 & -lm & -lInternLib";

#endgpm
(*
** Intern.md
** -----------
** Definitionsmodul des XGraphic-Paketes zur Programmierung
** von XView 3.0 mit Modula-2. (Interner Teil)
** --------------------------------------------------------
** Autor:    Alexander Schoelling
** Datum:    3.1.94
** Modif.:   20.8.96, Alexander Schoelling: Interne Funktionen
**           XG_* in I_XG_* umbenannt.
*)

#ifmocka
  FROM    Arguments       IMPORT  ArgTable;

  FROM    Strings         IMPORT  String;
#endmocka

#ifgpm
  FROM    StdStrings      IMPORT  String;

  FROM    Types           IMPORT  SHORTCARD;

  FROM    args            IMPORT  ArgTable;
#endgpm

FROM    SYSTEM          IMPORT  ADDRESS;

PROCEDURE I_XG_Init (  AnzahlArgumente : SHORTCARD;          (* IN     *)
                       Argumente       : ArgTable;           (* IN     *)
                       CB_Repaint      : PROC;               (* IN     *)
                       CB_Event        : PROC);              (* IN     *)

PROCEDURE I_XG_StartMainLoop ();                             (*        *)

PROCEDURE I_XG_SetTimer (	IntervalTime : INTEGER;      (* IN     *)
				callback : PROC);            (* IN     *)

PROCEDURE I_XGM_NewMenu (  label : ARRAY OF CHAR) : INTEGER; (* IN     *)

PROCEDURE I_XGM_AppendItem (  mHandle : INTEGER;             (* IN     *)
                              label   : ARRAY OF CHAR);      (* IN     *)

PROCEDURE I_XGM_CreateMenu (  mHandle  : INTEGER;            (* IN     *)
                              callback : PROC);              (* IN     *)

PROCEDURE I_XGM_SetItemActivity (  Handle : INTEGER;         (* IN     *)
                                   Nummer : INTEGER;         (* IN     *)
                                   Status : INTEGER);        (* IN     *)


PROCEDURE I_XGF_SetLeft (  text : ARRAY OF CHAR);            (* IN     *)

PROCEDURE I_XGF_SetRight (  text : ARRAY OF CHAR);           (* IN     *)

PROCEDURE I_XGF_SetDefault ();                               (*        *)


PROCEDURE I_XGN_InputInt (  prompt : ADDRESS;                (* IN     *)
                            start  : INTEGER;                (* IN     *)
                            lbound : INTEGER;                (* IN     *)
                            ubound : INTEGER;                (* IN     *)
                            ticks  : INTEGER);               (* IN     *)

PROCEDURE I_XGN_GetLastInteger (VAR Int : INTEGER) : INTEGER;(*    OUT *)

PROCEDURE I_XGN_ShowNotice (  Text : ARRAY OF CHAR);         (* IN     *)

PROCEDURE I_XGN_InputString (  prompt : ARRAY OF CHAR);      (* IN     *)

PROCEDURE I_XGN_GetLastString (  Str : ADDRESS) : INTEGER;   (*    OUT *)

PROCEDURE I_XGN_FileSelector (  mask : ADDRESS);             (* IN     *)

PROCEDURE I_XGN_GetFileName  (  filename : ADDRESS)          (*    OUT *)
                                                  : INTEGER;

PROCEDURE I_XGN_YesOrNo (  prompt : ADDRESS) : INTEGER;      (* IN     *)
                                                  

PROCEDURE I_XGD_NoClipping ();

PROCEDURE I_XGD_SetClipping (	px : INTEGER;
				py : INTEGER;
				w : INTEGER;
				h : INTEGER);

PROCEDURE I_XGD_DrawLine (  x1    : INTEGER;                 (* IN     *)
                            y1    : INTEGER;                 (* IN     *)
                            x2    : INTEGER;                 (* IN     *)
                            y2    : INTEGER;                 (* IN     *)
                            w     : INTEGER;                 (* IN     *)
                            color : INTEGER);                (* IN     *)

(* Interne Prozedursetzt die Farbe fuer die PROC XGD_DrawTriangle. Nur 
   solange Fehler im SUN Mocka-Compiler nicht behoben ist *)
PROCEDURE I_XGD_SetColor (color : INTEGER);

(* Interne Prozedur, die nur ein gefuelltes Dreieck malt.	*)
(* Wird fuer XGD_DrawArrowLine gebraucht.			*)
PROCEDURE I_XGD_DrawTriangle (	x1, y1,
				x2, y2,
				x3, y3 : INTEGER);
(*				color	: INTEGER); *)


PROCEDURE I_XGD_DrawCircle (  x     : INTEGER;               (* IN     *)
                              y     : INTEGER;               (* IN     *)
                              r     : INTEGER;               (* IN     *)
                              filled: INTEGER;
                              color : INTEGER);              (* IN     *)

PROCEDURE I_XGD_DrawString (  x     : INTEGER;               (* IN     *)
                              y     : INTEGER;               (* IN     *) 
                              text  : ADDRESS;               (* IN     *)
                              color : INTEGER);              (* IN     *)

PROCEDURE I_XGD_GetStringExtents (	text : ADDRESS;      (* IN     *)
				  VAR   w    : INTEGER;      (*    OUT *)
				  VAR   h    : INTEGER);     (*    OUT *)

PROCEDURE I_XGD_BeginPoly (  n : INTEGER);                   (* IN     *)

PROCEDURE I_XGD_AddPolyPoint (  x : INTEGER;                 (* IN     *)
                                y : INTEGER);                (* IN     *)

PROCEDURE I_XGD_DrawPoly (  closed : INTEGER;                (* IN     *)
                            filled : INTEGER;                (* IN     *)
                            width  : INTEGER;                (* IN     *)
                            color  : INTEGER);               (* IN     *)

PROCEDURE I_XGD_Clear ();                                    (*        *)

PROCEDURE I_XGD_Flush ();                                    (*        *)


PROCEDURE I_XGE_Button_L () : INTEGER;                       (*        *)

PROCEDURE I_XGE_Button_M () : INTEGER;                       (*        *)

PROCEDURE I_XGE_Button_R () : INTEGER;                       (*        *)

PROCEDURE I_XGE_MouseMove () : INTEGER;                      (*        *)

PROCEDURE I_XGE_ButtonEvent () : INTEGER;                    (*        *)

PROCEDURE I_XGE_X_Position () : INTEGER;                     (*        *)

PROCEDURE I_XGE_Y_Position () : INTEGER;                     (*        *)

PROCEDURE I_XGE_KeyCode () : CHAR;                           (*        *)

PROCEDURE I_XGE_KeyPressed () : INTEGER;                     (*        *)

PROCEDURE I_XG_Sleep (Seconds : INTEGER) : INTEGER;

END intern_lib.

